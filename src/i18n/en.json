{
  "nav": {
    "about": "About",
    "stack": "Tech Stack",
    "projects": "Projects",
    "certificates": "Certificates",
    "prices": "Prices",
    "contacts": "Contacts"
  },
  "bio": {
    "title": "About Me",
    "description": "Backend developer from Russia with 1+ year of commercial experience in building Telegram bots, web apps, and fullstack solutions. Skilled in Python (FastAPI, aiogram), JavaScript/TypeScript (Node.js, Express, Nest, React, Vue), Docker, Redis, and Postgres. Passionate about clean code and retro pixel art."
  },
  "arch": {
    "title": "Arch Linux",
    "description": "I use Arch, btw. My go-to OS for development."
  },
  "docker": {
    "title": "Docker",
    "description": "Every freelance web developer needs some DevOps skills. I use Docker for containerization."
  },
  "eth": {
    "title": "Ethereum",
    "description": "Worked with Ethereum libraries, particularly web3.js."
  },
  "express": {
    "title": "Express",
    "description": "Perfect for small applications like Telegram Mini Apps."
  },
  "fastapi": {
    "title": "FastAPI",
    "description": "The most convenient and clear tool for building APIs."
  },
  "git": {
    "title": "Git",
    "description": "As sacred as Linux. Essential for version control."
  },
  "js": {
    "title": "JavaScript",
    "description": "Second (and last) after Python in my stack."
  },
  "nest": {
    "title": "NestJS",
    "description": "For serious developers building robust applications."
  },
  "node": {
    "title": "Node.js",
    "description": "The cradle for JavaScript and TypeScript development."
  },
  "npm": {
    "title": "npm",
    "description": "A bit cumbersome but reliable package manager."
  },
  "postgres": {
    "title": "PostgreSQL",
    "description": "The ultimate database for all my projects."
  },
  "python": {
    "title": "Python",
    "description": "My top language with over 2 years of experience."
  },
  "react": {
    "title": "React",
    "description": "Like a jet engine for building awesome interfaces."
  },
  "redis": {
    "title": "Redis",
    "description": "Used for caching, small tasks, and even as a lightweight database."
  },
  "telegram": {
    "title": "Telegram API",
    "description": "I build bots and Telegram Mini Apps, working extensively with the Telegram API."
  },
  "tensorflow": {
    "title": "TensorFlow",
    "description": "The future of IT with machine learning capabilities."
  },
  "ton": {
    "title": "TON",
    "description": "The future of blockchain technology."
  },
  "ts": {
    "title": "TypeScript",
    "description": "A sane version of JavaScript."
  },
  "vue": {
    "title": "Vue",
    "description": "Just Vue â€” simple and powerful."
  },
  "svara": {
    "title": "SvaraPro",
    "description": "Developed a full-featured 6-player card game as a Telegram Mini App with integrated cryptocurrency betting (TON, USDT). Engineered complex game logic, real-time interactions via WebSockets, and a referral system for user acquisition. The backend ensures high performance and reliability through a microservices architecture built with Nest.js, PostgreSQL, and Redis."
  },
  "trader": {
    "title": "Ruble Trader Game",
    "description": "Built a gamified trading simulator within a Telegram Mini App. Users can trade with small deposits, compete on leaderboards, and farm game tokens for activity. A key feature is the TonConnect integration for secure crypto transactions. The project architecture features a Vue.js frontend, a high-performance Nest.js backend, and real-time price updates via WebSockets."
  },
  "caller": {
    "title": "Crypto Caller",
    "description": "Engineered an alert service that notifies users of crypto price targets via automated phone calls using Twilio. Users set custom price levels for tokens, and the system triggers a call upon reaching them. The project includes a subscription model, exchange integrations, and a robust backend for processing high volumes of real-time market data."
  },
  "ruble": {
    "title": "Ruble Coin Landing",
    "description": "Designed and developed a high-conversion landing page for the Ruble cryptocurrency token. The goal was to clearly present the project's concept, benefits, and call-to-action. The site features a responsive design, custom JavaScript animations, and is optimized for search engines (SEO) to effectively attract investors and users."
  },
  "jesko": {
    "title": "Jesko VPN",
    "description": "Designed and launched a comprehensive Telegram bot for selling VPN access via Outline. The system automatically generates and configures VPN keys for various devices and countries. Implemented multi-currency payments (including crypto), a referral program, subscription giveaways, and a powerful admin panel for user and financial management built on FastAPI and PostgreSQL."
  },
  "neuro": {
    "title": "NeuronAgent",
    "description": "Created a multifunctional Telegram bot for interacting with OpenAI and Midjourney AI models. The bot communicates via voice messages (speech-to-text and text-to-speech), generates images from prompts, and operates on a subscription model. Implemented a referral system and an admin panel for analytics and content management."
  },
  "mori": {
    "title": "MORI SWAP",
    "description": "Developed a single-page application (SPA) for seamless bridging of USDT from the TON network to meme coins on the Solana ecosystem (Mori). Integrated with two bridging protocols, Rhino.fi and Jupiter AG, to ensure the best rates and liquidity. The React-based interface is intuitive and securely interacts with user wallets via Web3."
  },
  "style": {
    "title": "STYLE.RF",
    "description": "Full-stack development of a beauty blog with a custom content management system (CMS). The platform includes user profiles, commenting with likes/dislikes, content sharing functionality, email notifications (NodeMailer), and brand promotion features. The admin panel allows for easy management of articles, news, and user engagement."
  },
  "github": {
    "title": "GitHub"
  },
  "vk": {
    "title": "VK"
  },
  "telegram": {
    "title": "Telegram"
  },
  "linkedin": {
    "title": "LinkedIn"
  },
  "kaggle": {
    "title": "Kaggle"
  },
  "kwork": {
    "title": "Kwork"
  },
  "prices": {
    "hour": "hour",
    "hours": "hours",
    "fullstack_dev_header": { "title": "Fullstack Development" },
    "fullstack_1": { "title": "50-Hour Package" },
    "fullstack_2": { "title": "100-Hour Package" },
    "backend_dev_header": { "title": "Backend Development" },
    "backend_1": { "title": "50-Hour Package" },
    "backend_2": { "title": "100-Hour Package" },
    "frontend_dev_header": { "title": "Frontend Development" },
    "frontend_1": { "title": "50-Hour Package" },
    "frontend_2": { "title": "100-Hour Package" },
    "telegram_bots_header": { "title": "Telegram Bots (Aiogram)" },
    "telegram_bots_1": { "title": "30-Hour Package" },
    "telegram_bots_2": { "title": "50-Hour Package" },
    "telegram_mini_app_header": { "title": "Telegram Mini App (TMA)" },
    "telegram_mini_app_1": { "title": "50-Hour Package" },
    "telegram_mini_app_2": { "title": "100-Hour Package" },
    "devops_header": { "title": "DevOps" },
    "devops_1": { "title": "20-Hour Package" },
    "devops_2": { "title": "50-Hour Package" },
    "security_header": { "title": "Security (Audit/Implementation)" },
    "security_1": { "title": "20-Hour Package" },
    "security_2": { "title": "50-Hour Package" },
    "smart_contracts_header": { "title": "Smart Contracts" },
    "smart_contracts_1": { "title": "30-Hour Package" },
    "smart_contracts_2": { "title": "80-Hour Package" },
    "datascience_header": { "title": "DataScience / Machine Learning" },
    "datascience_1": { "title": "40-Hour Package" },
    "datascience_2": { "title": "100-Hour Package" }
  }
}
